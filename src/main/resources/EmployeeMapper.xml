<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--命名空间使用接口的全类名，以实现接口式编程！-->
<mapper namespace="cnjxufe.bean.EmployeeMapper">
    <select id="getEmployeeById" resultType="employee" databaseId="mysql">
        select *
        from tbl_employee
        where id = #{id}
    </select>
    <select id="getEmployeeById" resultType="employee" databaseId="sql_server">
        select *
        from tbl_ss_employee
        where id = #{id}
    </select>
    <!-- 还有#{}和${}的区别：
    前者是以预编译的形式将参数设置到sql语句中的，即是用preparedStatement，可防止sql注入。
    后者将取出的参数值直接拼装到sql中，会有安全问题！
    大部分情况下使用#{}

    原生jdbc不支持占位符的地方可以使用${}
    少数情况比如：分表
                    比如按照年份表拆分：
                    select * from ${year}_salary;
                排序
                    select * from tbl_employee order by ${param} by ${order}

    再讲些#{}更丰富的用法：
        一般存储过程用的比较多，用到再了解！
    -->
    <update id="updateEmployee" parameterType="cnjxufe.bean.Employee" databaseId="sql_server">
        update tbl_ss_employee
        set last_name = #{lastName},
            gender    = #{gender},
            email     = #{email}
        where id = #{id};
    </update>

    <!--parameterType可以省略-->
    <!--insert还有一个属性值得注意，就是useGenerateKeys="true"
        mysql和SQL Server数据库都支持自增主键，自增主键的获取，mybatis也是和jdbc一样
        通过statement.getGenerateKeys()获取
        配合keyProperty指定对应的主键属性名，将生成的主键值自动插入到传入的对象的对应属性处。
        由于这里没有使用自增属性，也就不示例了！
    -->
    <insert id="insertEmployee" parameterType="cnjxufe.bean.Employee" databaseId="sql_server">
        insert into tbl_ss_employee
        values (#{id}, #{lastName}, #{gender}, #{email}, 1);
    </insert>

    <delete id="deleteEmployeeById" databaseId="sql_server" parameterType="String">
        delete from tbl_ss_employee
        where id = #{id};
    </delete>

    <!--参数传递相关知识：
            1. 只有一个参数时：就直接传递
            2. 多个参数：mybatis就会将参数封装在一个LinkedHashMap中，#{}就是根据key取值。
                直接使用参数名获取传入的参数值（last_name = #{lastName}）会报错：
                org.apache.ibatis.binding.BindingException: Parameter 'lastName' not found.
                 Available parameters are [arg1, arg0, param1, param2];
                 告诉我们应该用上面方括号中的值获取如last_name = #{param1}或last_name = #{arg0}

                 当然我们可以使用参数名直接获取参数值，但要在相应的接口中加上注解，像下面这样：
    -->
    <!--Employee getEmployeeByLastNameAndGender(@Param("lastName") String lastName,
     @Param("gender") String gender);-->

    <!--也可以直接将多个参数封装成一个map，可以直接用#{}取值!-->
    <!--========================================================================-->
    <!--Employee getEmployeeByLastNameAndGender(String lastName,
     @Param("employee") Employee employee);  ===>  #{param1}  #{employee.id}-->
    <!--如果是collection对象或数组
    Employee getEmployeeByIds(List<String> ids); ===> #{ids[0]}-->
    <select id="getEmployeeByLastNameAndGender" resultType="cnjxufe.bean.Employee" databaseId="sql_server">
        select *
        from tbl_ss_employee
        where last_name = #{lastName}
          and gender = #{gender};
    </select>

    <!--List<Employee> getEmployeeByGender(String gender);-->
    <!--返回的是集合元素，但result仍然写元素类型！-->
    <select id="getEmployeeByGender" databaseId="sql_server" resultType="cnjxufe.bean.Employee">
        select *
        from tbl_ss_employee
        where gender = #{gender};
    </select>

    <!--Map<String, Object> getEmployeeReturnMap(String id);-->
    <!--resultType="map"直接用map表示Map是因为mybatis帮我们将常用的类取了别名！-->
    <select id="getEmployeeReturnMap" resultType="map" databaseId="sql_server">
        select *
        from tbl_ss_employee
        where id = #{hierarchyid};
    </select>

    <!--@MapKey("id") Map<String, Employee> getEmployeesReturnMap(String gender);-->
    <select id="getEmployeesReturnMap" resultType="map" databaseId="sql_server">
        select *
        from tbl_ss_employee
        where gender = #{gender};
    </select>

    <!--用作集合结果集的分步查询！-->
    <!--List<Employee> getEmployeesByDepartmentId(Integer departmentId);-->
    <!--注意一个问题：resultType是里面元素类型和list都可以吗？答：前面已经有例子，只能写list中的元素类型！好像只有-->
    <select id="getEmployeesByDepartmentId" resultType="cnjxufe.bean.Employee" databaseId="sql_server">
        SELECT *
        FROM tbl_ss_employee
        where department_id = #{departmentId};
    </select>
</mapper>